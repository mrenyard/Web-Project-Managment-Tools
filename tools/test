#!/bin/bash -eu

if [[ "$0" != "tools/test" ]]; then
  echo "Must be run from parent project containing directory NOT $0";
  exit 1;
fi

if [ $USER == 'root' ]; then USER=$SUDO_USER; HOME="/home/${SUDO_USER}"; fi
if [[ "${HOME}" == "/root" || "${HOME}" == "/home/root" ]]; then
  echo "${HOME} IS AN INVALID HOME PATH!";
  read -p "Enter username: " USERNAME
  HOME=`echo "/home/${USERNAME}"`;
fi
export HOME;

RESPONSE=;
log_response () {
  echo -e $1;
  RESPONSE+="$1\n";
}

sudo tools/package --deploy;

# virtualhost-get-domain
echo "TESTING virtualhost-get-domain";
DEFAULT=`virtualhost-get-domain 000-default`
if [[ "${DEFAULT}" != www.${HOSTNAME}.lan ]]; then
  log_response "virtualhost-get-domain Test \e[0;31mFAILED!\e[0m";
else
  log_response "virtualhost-get-domain Test \e[0;32mSUCCESSFULL\e[0m"; 
fi

# virtualhost-edit
echo "TESTING virtualhost-edit";
echo "SETTING UP pre test";
sudo /bin/cp /etc/webshop/skel/vhost/base.txt /etc/apache2/sites-available/testedit.conf;
sudo virtualhost-edit testedit edit.${HOSTNAME}.lan;
if [[ ! -z $(grep "ServerName edit\.${HOSTNAME}\.lan" "/etc/apache2/sites-available/testedit.conf") ]]; then
  if [[ ! -z $(grep "DocumentRoot /var/www/testedit" "/etc/apache2/sites-available/testedit.conf") ]]; then
    if [[ ! -z $(grep "ServerName style.edit\.${HOSTNAME}\.lan" "/etc/apache2/sites-available/testedit.conf") ]]; then
      if [[ ! -z $(grep "DocumentRoot /var/www/style.testedit" "/etc/apache2/sites-available/testedit.conf") ]]; then
        if [[ ! -z $(grep "ServerName func.edit\.${HOSTNAME}\.lan" "/etc/apache2/sites-available/testedit.conf") ]]; then
          if [[ ! -z $(grep "DocumentRoot /var/www/func.testedit" "/etc/apache2/sites-available/testedit.conf") ]]; then
            if [[ ! -z $(grep "ServerName media.edit\.${HOSTNAME}\.lan" "/etc/apache2/sites-available/testedit.conf") ]]; then
              if [[ ! -z $(grep "DocumentRoot /var/www/media.testedit" "/etc/apache2/sites-available/testedit.conf") ]]; then
                if [[ ! -z $(grep "ServerName dev.edit\.${HOSTNAME}\.lan" "/etc/apache2/sites-available/testedit.conf") ]]; then
                  if [[ ! -z $(grep "DocumentRoot /var/www/dev.testedit" "/etc/apache2/sites-available/testedit.conf") ]]; then
                    log_response "virtualhost-edit Test \e[0;32mSUCCESSFULL\e[0m";
                  else
                    log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm dev DocumentRoot";
                  fi
                else
                  log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm dev ServerName";
                fi
              else
                log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm media DocumentRoot";
              fi
            else
              log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm media ServerName";
            fi
          else
            log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm func DocumentRoot";
          fi
        else
          log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm func ServerName";
        fi
      else
        log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm style DocumentRoot";
      fi
    else
      log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm style ServerName";
    fi
  else
    log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm DocumentRoot";
  fi
else
  log_response "virtualhost-edit Test \e[0;31mFAILED!\e[0m - unable to confirm ServerName";
fi
sudo rm /etc/apache2/sites-available/testedit.conf;

# virtualhost TestVH1 add testvh1
echo "TESTING virtualhost add";
echo "SETTING UP pre test";
/bin/mkdir -pv "${HOME}/Projects/Test VH 1";
/bin/cp -dR /etc/webshop/skel/base/* "${HOME}/Projects/Test VH 1";
sudo virtualhost "Test VH 1" add testvh1;
if [[ -d "/var/www/testvh1" ]]; then
  if [[ -d "/var/www/style.testvh1" ]]; then
    if [[ -d "/var/www/func.testvh1" ]]; then
      if [[ -d "/var/www/media.testvh1" ]]; then
        if [[ -d "/var/www/dev.testvh1" ]]; then
          if [[ -f "/etc/apache2/sites-enabled/testvh1.conf" ]]; then
            if [[ ! -z $(grep 'testvh1 "Test VH 1"' "${HOME}/Projects/.manifest") ]]; then
              if [[ -z $(curl -sk --head https://testvh1.${HOSTNAME}.lan/ | head -n 1 | grep "HTTP/1.[01] 200.." > /dev/null) ]]; then
                log_response "virtualhost 1 add Test \e[0;32mSUCCESSFULL\e[0m";
              else
                log_response "virtualhost 1 add Test \e[0;31mFAILED!\e[0m - unable to confirm site testvh1.${HOSTNAME}.lan is live";
              fi
            else
              log_response "virtualhost 1 add Test \e[0;31mFAILED!\e[0m - unable to confirm entry in .manifest";            
            fi
          else
            log_response "virtualhost 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /etc/apache2/sites-avalible/testvh1.conf";
          fi
        else
          log_response "virtualhost 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/dev.testvh1";
        fi
      else
        log_response "virtualhost 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/media.testvh1";
      fi
    else
      log_response "virtualhost 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/func.testvh1";
    fi
  else
    log_response "virtualhost 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/style.testvh1";
  fi
else
  log_response "virtualhost 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/testvh1";
fi

# virtualhost TestVH1 remove
echo "TESTING virtualhost remove";
sudo virtualhost "Test VH 1" remove;
if [[ -d "/var/www/testvh1" ]]; then
  log_response "virtualhost 1 remove Test \e[0;31mFAILED!\e[0m - verify to absence of /var/www/testvh1";
else 
  if [[ -d "/var/www/style.testvh1" ]]; then
    log_response "virtualhost 1 remove Test \e[0;31mFAILED!\e[0m - unable to verify absence of /var/www/style.testvh1";
  else
    if [[ -d "/var/www/func.testvh1" ]]; then
      log_response "virtualhost 1 remove Test \e[0;31mFAILED!\e[0m - unable to verify absence of /var/www/func.testvh1";
    else
      if [[ -d "/var/www/media.testvh1" ]]; then
        log_response "virtualhost 1 remove Test \e[0;31mFAILED!\e[0m - unable to verify absence of /var/www/media.testvh1";
      else
        if [[ -d "/var/www/dev.testvh1" ]]; then
          log_response "virtualhost 1 remove Test \e[0;31mFAILED!\e[0m - unable to verify absence of /var/www/dev.testvh1";
        else
          if [[ -f "/etc/apache2/sites-available/testvh1.conf" ]]; then
              log_response "virtualhost 1 remove Test \e[0;31mFAILED!\e[0m - unable to verify absence of /etc/apache2/sites-avalible/testvh1.conf";
          else
            if [[ ! -z $(grep 'testvh1 "Test VH 1"' "${HOME}/Projects/.manifest") ]]; then
              log_response "virtualhost 1 remove Test \e[0;31mFAILED!\e[0m - unable to confirm absence of entry in .manifest";
            else
              log_response "virtualhost 1 remove Test \e[0;32mSUCCESSFULL\e[0m";
            fi
          fi
        fi
      fi
    fi
  fi
fi

# virtualhosts-from-manifest
echo "TESTING virtualhosts-from-manifest";
echo "SETTING UP pre test";
echo "testvh1 \"Test VH 1\"" >> ${HOME}/Projects/.manifest;
/bin/mkdir -pv "${HOME}/Projects/Test VH 2";
/bin/cp -dR /etc/webshop/skel/base/* "${HOME}/Projects/Test VH 2";
echo "testvh2 \"Test VH 2\"" >> ${HOME}/Projects/.manifest;
virtualhosts-from-manifest
if [[ -d "/var/www/testvh1" ]]; then
  if [[ -d "/var/www/style.testvh1" ]]; then
    if [[ -d "/var/www/func.testvh1" ]]; then
      if [[ -d "/var/www/media.testvh1" ]]; then
        if [[ -d "/var/www/dev.testvh1" ]]; then
          if [[ -f "/etc/apache2/sites-available/testvh1.conf" ]]; then
            if [[ ! -z $(grep 'testvh1 "Test VH 1"' "${HOME}/Projects/.manifest") ]]; then
              if [[ -d "/var/www/testvh2" ]]; then
                if [[ -d "/var/www/style.testvh2" ]]; then
                  if [[ -d "/var/www/func.testvh2" ]]; then
                    if [[ -d "/var/www/media.testvh2" ]]; then
                      if [[ -d "/var/www/dev.testvh2" ]]; then
                        if [[ -f "/etc/apache2/sites-available/testvh2.conf" ]]; then
                          if [[ ! -z $(grep "testvh2 \"Test VH 2\"" "${HOME}/Projects/.manifest") ]]; then
                            log_response "virtualhosts-from-manifest Test \e[0;32mSUCCESSFULL\e[0m";
                          else
                            log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to confirm entry in .manifest testvh2";            
                          fi
                        else
                          log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /etc/apache2/sites-avalible/testvh2.conf";
                        fi
                      else
                        log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/dev.testvh2";
                      fi
                    else
                      log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/media.testvh2";
                    fi
                  else
                    log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/func.testvh2";
                  fi
                else
                  log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/style.testvh2";
                fi
              else
                log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/testvh2";
              fi
            else
              log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to confirm entry in .manifest testvh1";            
            fi
          else
            log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /etc/apache2/sites-avalible/testvh1.conf";
          fi
        else
          log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/dev.testvh1";
        fi
      else
        log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/media.testvh1";
      fi
    else
      log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/func.testvh1";
    fi
  else
    log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/style.testvh1";
  fi
else
  log_response "virtualhosts-from-manifest Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/testvh1";
fi

# virtualhost-edit (change domain) testvh2
echo "TESTING virtualhost-edit Rename (change domain)";
sudo virtualhost-edit testvh1 new-domain.lan;
if [[ ! -z $(grep "ServerName new-domain.lan" "/etc/apache2/sites-available/testvh1.conf") ]]; then
  if [[ ! -z $(grep "DocumentRoot /var/www/testvh1" "/etc/apache2/sites-available/testvh1.conf") ]]; then
    log_response "virtualhost-edit Rename Test \e[0;32mSUCCESSFULL\e[0m";
  else
    log_response "virtualhost-edit Rename Test \e[0;31mFAILED!\e[0m - unable to confirm DocumentRoot";
  fi
else
  log_response "virtualhost-edit Rename Test \e[0;31mFAILED!\e[0m - unable to confirm ServerName";
fi

# virtualhost-append-copy
echo "TESTING virtualhost-append-copy";
sudo virtualhost-append-copy testvh1;
if [[ ! -z $(grep "ServerName copy.new-domain.lan" "/etc/apache2/sites-available/testvh1.conf") ]]; then
  if [[ ! -z $(grep "DocumentRoot /var/www/copy.testvh1" "/etc/apache2/sites-available/testvh1.conf") ]]; then
    log_response "virtualhost-append-copy Test \e[0;32mSUCCESSFULL\e[0m";
  else
    log_response "virtualhost-append-copy Test \e[0;31mFAILED!\e[0m - unable to confirm DocumentRoot";
  fi
else
  log_response "virtualhost-append-copy Test \e[0;31mFAILED!\e[0m - unable to confirm ServerName";
fi

# copy-current-website
echo "TESTING copy-current-website";
sudo copy-current-website "Test VH 2" www.example.com;
if [[ -d "${HOME}/Projects/Test VH 2/copy" ]]; then
  if [[ -d "/var/www/copy.testvh2" ]]; then
    if [[ -z $(grep "ServerName copy.thestvh2\.${HOSTNAME}\.lan" "/etc/apache2/sites-available/testvh2.conf") ]]; then
      if [[ -z $(curl -sk --head https://copy.testvh2.${HOSTNAME}.lan/ | head -n 1 | grep "HTTP/1.[01] 200.." > /dev/null) ]]; then
        log_response "copy-current-website Test \e[0;32mSUCCESSFULL\e[0m";
      else
        log_response "copy-current-website Test \e[0;31mFAILED!\e[0m - unable to confirm site copy.testvh2.${HOSTNAME}.lan is live";
      fi
    else
      log_response "copy-current-website Test \e[0;31mFAILED!\e[0m - unable to confirm ServerName in virtual host file";
    fi
  else 
    log_response "copy-current-website Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/copy.testvh2";
  fi
else
    log_response "copy-current-website Test \e[0;31mFAILED!\e[0m - unable to localte ${HOME}/Projects/TestVH2/copy";
fi

# webproject new
echo "TESTING webproject new (basic)";
sudo webproject "Test WP 1" new
if [[ -d "${HOME}/Projects/Test WP 1" ]]; then
if [[ -d "/var/www/testwp1" ]]; then
  if [[ -d "/var/www/style.testwp1" ]]; then
    if [[ -d "/var/www/func.testwp1" ]]; then
      if [[ -d "/var/www/media.testwp1" ]]; then
        if [[ -d "/var/www/dev.testwp1" ]]; then
          if [[ -f "/etc/apache2/sites-enabled/testwp1.conf" ]]; then
            if [[ -d "${HOME}/Projects/Test WP 1/www" ]]; then
              if [[ ! -z $(grep 'testwp1 "Test WP 1"' "${HOME}/Projects/.manifest") ]]; then
                if [[ -z $(curl -sk --head https://testwp1.${HOSTNAME}.lan/ | head -n 1 | grep "HTTP/1.[01] 200.." > /dev/null) ]]; then
                  log_response "webproject 1 add Test \e[0;32mSUCCESSFULL\e[0m";
                else
                  log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to confirm site testwp1.${HOSTNAME}.lan is live";
                fi
              else
                log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to confirm entry in .manifest";            
              fi
            else
              log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to localte '${HOME}/Projects/Test WP 1/www'";
            fi
          else
            log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /etc/apache2/sites-avalible/testwp1.conf";
          fi
        else
          log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/dev.testwp1";
        fi
      else
        log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/media.testwp1";
      fi
    else
      log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/func.testwp1";
    fi
  else
    log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/style.testwp1";
  fi
else
  log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to localte /var/www/testwp1";
fi
else
  log_response "webproject 1 add Test \e[0;31mFAILED!\e[0m - unable to localte ${HOME}/Projects/Test\ WP\ 1";
fi

# # webproject "PROJECT_NAME" new --domain DOMAIN --application --copy COPY_DOMAIN
# echo "TESTING webproject new (with all extras)";
# webproject "Test WP 2" new --domain t2 --application --copy www.example.com

# # webproject "PROJECT_NAME" extend --domain DOMAIN --application --copy COPY_DOMAIN
# echo "TESTING webproject extend (with all extras)";
# webproject "Test WP 1" extend --domain t1 --application --copy www.example.com

# # webproject "PROJECT_NAME" update --domain new-domain.lan
# echo "TESTING webproject update (change domain, update application skeleton)";
# sudo echo "FLAG" >> /var/www/copy.testwp1/index.html;
# sudo touch ${HOME}/Projects/Test\ WP\ 2/application/02-userRequierments/manual.flag;
# sudo touch /etc/webshop/skel/application/02-userRequierments/update.flag;
# webproject "Test WP 2" update --domain testwp2 --application --copy t1.${HOSTNAME}.lan

# CLEAN UP
echo "CLEAN UP";
sudo virtualhost "Test VH 1" remove;
sudo virtualhost "Test VH 2" remove;
sudo virtualhost "Test WP 1" remove;
sudo rm -rf "${HOME}/Projects/Test VH 1";
sudo rm -rf "${HOME}/Projects/Test VH 2";
sudo rm -rf "${HOME}/Projects/Test WP 1";
sudo rm -rf /tmp/testvh2;

sudo systemctl restart apache2.service;

echo -e "\nFULL REPORT";
echo -e $RESPONSE;
exit 0;